plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services' // Google Services plugin
    // For Parcelize if needed for passing custom objects via navigation arguments
    // id 'kotlin-parcelize'
}

android {
    namespace 'com.example.fitnesstrackingapp' // Replace with your actual namespace
    compileSdk 34 // Use the latest stable SDK

    defaultConfig {
        applicationId "com.example.fitnesstrackingapp" // Replace
        minSdk 24 // Minimum SDK for decent Jetpack Compose support and modern APIs
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false // Set to true for production releases
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.5' // Align with your Kotlin and Compose versions
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.2'

    // Jetpack Compose
    implementation platform('androidx.compose:compose-bom:2023.10.01') // BOM for Compose
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3' // Material Design 3
    implementation 'androidx.compose.material:material-icons-core'
    implementation 'androidx.compose.material:material-icons-extended'


    // ViewModel and LiveData (though with Compose, StateFlow is often preferred)
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.2' // For collectAsStateWithLifecycle

    // Navigation Compose
    implementation 'androidx.navigation:navigation-compose:2.7.6'

    // Firebase - Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    // implementation 'com.google.firebase:firebase-analytics-ktx' // Optional: for Analytics

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.7.3' // For Firebase tasks integration

    // For `rememberNavController` and other accompanist libraries if needed later (e.g., permissions, system UI)
    // implementation "com.google.accompanist:accompanist-navigation-animation:0.32.0" // Example

    // UUID for unique IDs (Java's built-in UUID is fine, but if you had a specific lib like in RN)
    // No specific Android library needed for UUID, java.util.UUID is available.

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.10.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}
